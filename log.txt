epoch 0 iteration0, G Loss: 9.025753021240234, D Loss: 1.3862946033477783
epoch 0 iteration100, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration200, G Loss: 0.8775457739830017, D Loss: 1.4162564277648926
epoch 0 iteration300, G Loss: 1.7427995204925537, D Loss: 2.088606357574463
epoch 0 iteration400, G Loss: 1.033893346786499, D Loss: 1.2803184986114502
epoch 0 iteration500, G Loss: 0.6319636106491089, D Loss: 1.356730341911316
epoch 0 iteration600, G Loss: 0.8558463454246521, D Loss: 1.165245771408081
epoch 0 iteration700, G Loss: 0.8093662261962891, D Loss: 1.2284446954727173
Saving content.
epoch 1 iteration0, G Loss: 1.1694557666778564, D Loss: 1.3723113536834717
epoch 1 iteration100, G Loss: 0.8778367638587952, D Loss: 1.4111826419830322
epoch 1 iteration200, G Loss: 0.9048753976821899, D Loss: 1.2952046394348145
epoch 1 iteration300, G Loss: 0.6151995062828064, D Loss: 1.2755191326141357
epoch 1 iteration400, G Loss: 0.8339411020278931, D Loss: 1.280264139175415
epoch 1 iteration500, G Loss: 0.7334005832672119, D Loss: 1.3930392265319824
epoch 1 iteration600, G Loss: 1.4963054656982422, D Loss: 1.5257270336151123
epoch 1 iteration700, G Loss: 0.9294338822364807, D Loss: 1.3687522411346436
epoch 2 iteration0, G Loss: 2.1322617530822754, D Loss: 1.3640592098236084
epoch 2 iteration100, G Loss: 0.9178830981254578, D Loss: 1.3139888048171997
epoch 2 iteration200, G Loss: 1.1959469318389893, D Loss: 1.3495088815689087
epoch 2 iteration300, G Loss: 0.6603418588638306, D Loss: 1.3328168392181396
epoch 2 iteration400, G Loss: 0.7916498184204102, D Loss: 1.3713295459747314
epoch 2 iteration500, G Loss: 1.0218132734298706, D Loss: 1.2613953351974487
epoch 2 iteration600, G Loss: 0.49711093306541443, D Loss: 1.2793025970458984
epoch 2 iteration700, G Loss: 0.7007801532745361, D Loss: 1.27559232711792
epoch 3 iteration0, G Loss: 0.7543074488639832, D Loss: 1.6419076919555664
epoch 3 iteration100, G Loss: 1.2631258964538574, D Loss: 1.2655644416809082
epoch 3 iteration200, G Loss: 1.0669336318969727, D Loss: 1.3792049884796143
epoch 3 iteration300, G Loss: 1.2371314764022827, D Loss: 1.1988892555236816
epoch 3 iteration400, G Loss: 0.9676072597503662, D Loss: 1.2810962200164795
epoch 3 iteration500, G Loss: 0.9750184416770935, D Loss: 1.3177834749221802
epoch 3 iteration600, G Loss: 0.9358271360397339, D Loss: 1.3490493297576904
epoch 3 iteration700, G Loss: 0.7372096180915833, D Loss: 1.337735652923584
epoch 4 iteration0, G Loss: 0.9270532131195068, D Loss: 1.380914330482483
epoch 4 iteration100, G Loss: 0.9270406365394592, D Loss: 1.3972009420394897
epoch 4 iteration200, G Loss: 0.9217987060546875, D Loss: 1.3220950365066528
epoch 4 iteration300, G Loss: 0.8400489687919617, D Loss: 1.2888295650482178
epoch 4 iteration400, G Loss: 0.8711738586425781, D Loss: 1.3189268112182617
epoch 4 iteration500, G Loss: 0.9938977956771851, D Loss: 1.4005317687988281
epoch 4 iteration600, G Loss: 0.8754100799560547, D Loss: 1.296120047569275
epoch 4 iteration700, G Loss: 0.9451504349708557, D Loss: 1.3822860717773438
epoch 5 iteration0, G Loss: 1.1794216632843018, D Loss: 1.2749016284942627
epoch 5 iteration100, G Loss: 0.8224226832389832, D Loss: 1.3386931419372559
epoch 5 iteration200, G Loss: 0.48024338483810425, D Loss: 1.4154858589172363
epoch 5 iteration300, G Loss: 1.0999083518981934, D Loss: 1.4327908754348755
epoch 5 iteration400, G Loss: 0.8186385631561279, D Loss: 1.14973783493042
epoch 5 iteration500, G Loss: 0.7532827258110046, D Loss: 1.3643414974212646
epoch 5 iteration600, G Loss: 0.8128646612167358, D Loss: 1.2871932983398438
epoch 5 iteration700, G Loss: 1.2388393878936768, D Loss: 1.5145312547683716
epoch 6 iteration0, G Loss: 0.554437518119812, D Loss: 1.3868829011917114
epoch 6 iteration100, G Loss: 0.9160717725753784, D Loss: 1.3790547847747803
epoch 6 iteration200, G Loss: 1.1420255899429321, D Loss: 1.3635951280593872
epoch 6 iteration300, G Loss: 0.4823165535926819, D Loss: 1.4179065227508545
epoch 6 iteration400, G Loss: 0.7590799927711487, D Loss: 1.3617631196975708
epoch 6 iteration500, G Loss: 0.4993707537651062, D Loss: 1.4493224620819092
epoch 6 iteration600, G Loss: 1.058950662612915, D Loss: 1.3997066020965576
epoch 6 iteration700, G Loss: 0.6609823703765869, D Loss: 1.3747905492782593
epoch 7 iteration0, G Loss: 1.029880404472351, D Loss: 1.3475364446640015
epoch 7 iteration100, G Loss: 0.8388347029685974, D Loss: 1.3247323036193848
epoch 7 iteration200, G Loss: 0.8003644347190857, D Loss: 1.1916440725326538
epoch 7 iteration300, G Loss: 0.8650739192962646, D Loss: 1.323469638824463
epoch 7 iteration400, G Loss: 0.8983038663864136, D Loss: 1.3641555309295654
epoch 7 iteration500, G Loss: 0.7122074365615845, D Loss: 1.3697941303253174
epoch 7 iteration600, G Loss: 0.6825428009033203, D Loss: 1.36776864528656
epoch 7 iteration700, G Loss: 1.1143646240234375, D Loss: 1.385948657989502
epoch 8 iteration0, G Loss: 0.6095616817474365, D Loss: 1.3990919589996338
epoch 8 iteration100, G Loss: 0.7724905610084534, D Loss: 1.3119158744812012
epoch 8 iteration200, G Loss: 0.5237672924995422, D Loss: 1.3808398246765137

def dense_params(ni, no,init_scale=1.):
   return {'weight': variance_scaling_init_(torch.Tensor(no, ni),scale=init_scale), 'bias': torch.zeros(no)}

def conv2d_params(ni, no, k, do_bias, init_scale=0.):
   return {'w': variance_scaling_init_(torch.Tensor(no, ni, k, k),scale=init_scale), 
           'b': torch.zeros(no) if do_bias else None }

def conv2dT_params(ni, no, k, do_bias, init_scale=0.):
   return {'w': variance_scaling_init_(torch.Tensor(no, ni, k, k),scale=init_scale), 
           'b': torch.zeros(no) if do_bias else None }

begin
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
value.is_leaf True
value.requires_grad True
end

name_end_linear.bias
name_end_linear.weight
name_final_conv.b
name_final_conv.w
name_group_params.group0.conv1.b
name_group_params.group0.conv1.w
name_group_params.group0.conv2.b
name_group_params.group0.conv2.w
name_group_params.group0.dense_t1.bias
name_group_params.group0.dense_t1.weight
name_group_params.group0.skip.w
name_group_params.group1.conv1.b
name_group_params.group1.conv1.w
name_group_params.group1.conv2.b
name_group_params.group1.conv2.w
name_group_params.group1.dense_t1.bias
name_group_params.group1.dense_t1.weight
name_group_params.group1.skip.w
name_group_params.group2.conv1.b
name_group_params.group2.conv1.w
name_group_params.group2.conv2.b
name_group_params.group2.conv2.w
name_group_params.group2.dense_t1.bias
name_group_params.group2.dense_t1.weight
name_group_params.group2.skip.w
name_group_params.group3.conv1.b
name_group_params.group3.conv1.w
name_group_params.group3.conv2.b
name_group_params.group3.conv2.w
name_group_params.group3.dense_t1.bias
name_group_params.group3.dense_t1.weight
name_group_params.group3.skip.w
name_start_conv.b
name_start_conv.w
name_t_emb.dense.dense0.bias
name_t_emb.dense.dense0.weight
name_t_emb.dense.dense1.bias
name_t_emb.dense.dense1.weight

(t_embed): TimestepEmbedding(
    (main): Sequential(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): LeakyReLU(negative_slope=0.2)
      (2): Linear(in_features=256, out_features=256, bias=True)
    )
  )
  (start_conv): Conv2d(6, 128, kernel_size=(1, 1), stride=(1, 1))
  (conv1): DownConvBlock(
    (conv1): Sequential(
      (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (dense_t1): Linear(in_features=256, out_features=256, bias=True)
    (act): LeakyReLU(negative_slope=0.2)
    (skip): Sequential(
      (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
  )
  (conv2): DownConvBlock(
    (conv1): Sequential(
      (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (dense_t1): Linear(in_features=256, out_features=512, bias=True)
    (act): LeakyReLU(negative_slope=0.2)
    (skip): Sequential(
      (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
  )
  (conv3): DownConvBlock(
    (conv1): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (dense_t1): Linear(in_features=256, out_features=512, bias=True)
    (act): LeakyReLU(negative_slope=0.2)
    (skip): Sequential(
      (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
  )
  (conv4): DownConvBlock(
    (conv1): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv2): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (dense_t1): Linear(in_features=256, out_features=512, bias=True)
    (act): LeakyReLU(negative_slope=0.2)
    (skip): Sequential(
      (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
  )
    (final_conv): Conv2d(513, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (end_linear): Linear(in_features=512, out_features=1, bias=True)
))

epoch 0 iteration0, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration100, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration200, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration300, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration400, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration500, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration600, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521
epoch 0 iteration700, G Loss: 0.6094955801963806, D Loss: 1.4430005550384521


tensor([[ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        ...,
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        [ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01]], device='cuda:0',
       grad_fn=<LeakyReluBackward0>)
tensor([[ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        ...,
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        [ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01]], device='cuda:0',
       grad_fn=<LeakyReluBackward0>)
tensor([[ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        ...,
        [ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        [ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01]], device='cuda:0')
^CTraceback (most recent call last):


Files already downloaded and verified
tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        ...,
        [ 0.7688, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7688, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618]],
       device='cuda:0')
epoch 0 iteration0, G Loss: 9.025753021240234, D Loss: 1.3862946033477783


tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        ...,
        [ 0.7688, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7688, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618]],
       device='cuda:0')
epoch 0 iteration0, G Loss: 9.025753021240234, D Loss: 1.3862946033477783
tensor([[ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7688, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.5185, -0.0771,  0.5172,  ...,  0.2711,  0.4274,  0.3044],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.5185, -0.0771,  0.5172,  ...,  0.2711,  0.4274,  0.3044]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
^CTraceback (most recent call last):
  File "train_ddgan.py", line 601, in <module>
    init_processes(0, size, train, args)
  File "train_ddgan.py", line 470, in init_processes
    fn(rank, gpu, args)
Traceback (most recent call last):
Traceback (most recent call last):


tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.1169,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.0993,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.1086,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01],
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        ...,
        [ 4.8825e-01, -3.3281e-02, -2.9756e-02,  ..., -2.8528e-04,
          1.8041e-01, -1.5781e-01],
        [ 3.2149e-01, -2.6706e-02, -8.9757e-02,  ..., -2.9619e-04,
          1.5883e-01, -1.6096e-01],
        [ 5.5996e-01, -1.3668e-02,  3.5748e-02,  ...,  1.0547e-01,
          2.1877e-01, -1.4834e-01]], device='cuda:0',
       grad_fn=<LeakyReluBackward0>)

tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000],
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        ...,
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        [0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000]],




tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000],
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        ...,
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        [0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000]],
       device='cuda:0')


tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000],
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        ...,
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        [0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000]],
       device='cuda:0')
tensor([[ 1.7513, -0.7479, -0.3892,  ..., -0.0493, -0.4522,  0.3018],
        [ 1.5600, -0.1087, -0.2891,  ..., -0.1117, -0.0960,  0.2515],
        [ 1.7174, -0.3847, -0.3986,  ..., -0.0665, -0.3178,  0.2554],
        ...,
        [ 1.7174, -0.3847, -0.3986,  ..., -0.0665, -0.3178,  0.2554],
        [ 1.7513, -0.7479, -0.3892,  ..., -0.0493, -0.4522,  0.3018],
        [ 1.5600, -0.1087, -0.2891,  ..., -0.1117, -0.0960,  0.2515]],
       device='cuda:0', grad_fn=<AddmmBackward0>)
tensor([[ 1.7513, -0.1496, -0.0778,  ..., -0.0099, -0.0904,  0.3018],
        [ 1.5600, -0.0217, -0.0578,  ..., -0.0223, -0.0192,  0.2515],
        [ 1.7174, -0.0769, -0.0797,  ..., -0.0133, -0.0636,  0.2554],
        ...,
        [ 1.7174, -0.0769, -0.0797,  ..., -0.0133, -0.0636,  0.2554],
        [ 1.7513, -0.1496, -0.0778,  ..., -0.0099, -0.0904,  0.3018],
        [ 1.5600, -0.0217, -0.0578,  ..., -0.0223, -0.0192,  0.2515]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.7689, -0.4964,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.5429,  0.7088,  ...,  0.1723,  0.3669,  0.3623],
        [ 0.7555, -0.5844,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        ...,
        [ 0.7555, -0.5844,  0.9499,  ...,  0.1255,  0.2362,  0.4201],
        [ 0.7689, -0.4964,  1.1683,  ...,  0.1745,  0.0904,  0.4618],
        [ 0.6345, -0.5429,  0.7088,  ...,  0.1723,  0.3669,  0.3623]],
       device='cuda:0', grad_fn=<AddmmBackward0>)


tensor([3, 1, 2, 3, 3, 2, 2, 0, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 2, 1, 3, 2, 2,
        1, 3, 1, 3, 2, 1, 2, 0, 3, 2, 1, 1, 1, 0, 1, 3, 2, 2, 0, 1, 2, 3, 2, 2,
        0, 3, 0, 0, 3, 3, 3, 0, 3, 1, 1, 1, 3, 2, 3, 1], device='cuda:0')
tensor([[0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000],
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        ...,
        [0.9093, 0.9584, 0.9874,  ..., 1.0000, 1.0000, 1.0000],
        [0.1411, 0.3443, 0.5198,  ..., 1.0000, 1.0000, 1.0000],
        [0.8415, 0.8016, 0.7611,  ..., 1.0000, 1.0000, 1.0000]],
       device='cuda:0')
tensor([[-0.3266, -0.2818, -0.0704,  ..., -0.1581, -2.0813,  0.0031],
        [-0.1514, -0.1746, -0.3159,  ...,  0.1096, -1.5646,  0.1663],
        [-0.2081, -0.2802, -0.1435,  ...,  0.0299, -1.9625,  0.1291],
        ...,
        [-0.2081, -0.2802, -0.1435,  ...,  0.0299, -1.9625,  0.1291],
        [-0.3266, -0.2818, -0.0704,  ..., -0.1581, -2.0813,  0.0031],
        [-0.1514, -0.1746, -0.3159,  ...,  0.1096, -1.5646,  0.1663]],
       device='cuda:0', grad_fn=<AddmmBackward0>)
tensor([[-0.0653, -0.0564, -0.0141,  ..., -0.0316, -0.4163,  0.0031],
        [-0.0303, -0.0349, -0.0632,  ...,  0.1096, -0.3129,  0.1663],
        [-0.0416, -0.0560, -0.0287,  ...,  0.0299, -0.3925,  0.1291],
        ...,
        [-0.0416, -0.0560, -0.0287,  ...,  0.0299, -0.3925,  0.1291],
        [-0.0653, -0.0564, -0.0141,  ..., -0.0316, -0.4163,  0.0031],
        [-0.0303, -0.0349, -0.0632,  ...,  0.1096, -0.3129,  0.1663]],
       device='cuda:0', grad_fn=<LeakyReluBackward0>)
tensor([[ 0.3215, -0.1335, -0.4488,  ..., -0.0015,  0.1588, -0.8048],
        [ 0.5600, -0.0683,  0.0357,  ...,  0.1055,  0.2188, -0.7417],
        [ 0.4883, -0.1664, -0.1488,  ..., -0.0014,  0.1804, -0.7890],
        ...,
        [ 0.4883, -0.1664, -0.1488,  ..., -0.0014,  0.1804, -0.7890],
        [ 0.3215, -0.1335, -0.4488,  ..., -0.0015,  0.1588, -0.8048],
        [ 0.5600, -0.0683,  0.0357,  ...,  0.1055,  0.2188, -0.7417]],
       device='cuda:0', grad_fn=<AddmmBackward0>)



Files already downloaded and verified
tensor([[ 0.0175,  0.0774,  0.0047,  ...,  0.0717, -0.0591, -0.0655],
        [-0.0720, -0.0217,  0.0785,  ...,  0.0024, -0.0432, -0.1044],
        [ 0.0914,  0.0029, -0.0306,  ..., -0.0737, -0.0139, -0.0211],
        ...,
        [ 0.0854, -0.0514,  0.0301,  ..., -0.0552, -0.0216,  0.0140],
        [-0.0406, -0.0834, -0.0465,  ...,  0.0865,  0.0004, -0.0269],
        [ 0.0346,  0.0948,  0.0791,  ...,  0.0923, -0.0936, -0.0532]],
       device='cuda:0', requires_grad=True)
tensor([[ 0.0175,  0.0774,  0.0047,  ...,  0.0717, -0.0591, -0.0655],
        [-0.0720, -0.0217,  0.0785,  ...,  0.0024, -0.0432, -0.1044],
        [ 0.0914,  0.0029, -0.0306,  ..., -0.0737, -0.0139, -0.0211],
        ...,
        [ 0.0854, -0.0514,  0.0301,  ..., -0.0552, -0.0216,  0.0140],
        [-0.0406, -0.0834, -0.0465,  ...,  0.0865,  0.0004, -0.0269],
        [ 0.0346,  0.0948,  0.0791,  ...,  0.0923, -0.0936, -0.0532]],
       device='cuda:0', requires_grad=True)
tensor([[ 0.0175,  0.0774,  0.0047,  ...,  0.0717, -0.0591, -0.0655],
        [-0.0720, -0.0217,  0.0785,  ...,  0.0024, -0.0432, -0.1044],
        [ 0.0914,  0.0029, -0.0306,  ..., -0.0737, -0.0139, -0.0211],
        ...,
        [ 0.0854, -0.0514,  0.0301,  ..., -0.0552, -0.0216,  0.0140],
        [-0.0406, -0.0834, -0.0465,  ...,  0.0865,  0.0004, -0.0269],
        [ 0.0346,  0.0948,  0.0791,  ...,  0.0923, -0.0936, -0.0532]],
       device='cuda:0')

tensor([[ 0.0433,  0.0285, -0.0642,  ..., -0.0241,  0.0530,  0.0191],
        [ 0.1037, -0.0024, -0.0701,  ..., -0.0460, -0.0933, -0.0630],
        [ 0.0036, -0.0077, -0.0201,  ...,  0.1062,  0.0524, -0.0921],
        ...,
        [-0.0480,  0.0929,  0.0024,  ...,  0.0541,  0.0960, -0.0314],
        [-0.0963,  0.0003,  0.0896,  ...,  0.0676,  0.0608,  0.0350],
        [-0.0024, -0.1037,  0.0418,  ...,  0.0713, -0.0404,  0.1047]],
       device='cuda:0', requires_grad=True)
Parameter containing:
tensor([[ 0.0433,  0.0285, -0.0642,  ..., -0.0241,  0.0530,  0.0191],
        [ 0.1037, -0.0024, -0.0701,  ..., -0.0460, -0.0933, -0.0630],
        [ 0.0036, -0.0077, -0.0201,  ...,  0.1062,  0.0524, -0.0921],
        ...,
        [-0.0480,  0.0929,  0.0024,  ...,  0.0541,  0.0960, -0.0314],
        [-0.0963,  0.0003,  0.0896,  ...,  0.0676,  0.0608,  0.0350],
        [-0.0024, -0.1037,  0.0418,  ...,  0.0713, -0.0404,  0.1047]],
       device='cuda:0', requires_grad=True)
Parameter containing:
tensor([[ 0.0433,  0.0285, -0.0642,  ..., -0.0241,  0.0530,  0.0191],
        [ 0.1037, -0.0024, -0.0701,  ..., -0.0460, -0.0933, -0.0630],
        [ 0.0036, -0.0077, -0.0201,  ...,  0.1062,  0.0524, -0.0921],
        ...,


tensor([[ 1.7515e-07,  7.7397e-07,  4.7165e-08,  ...,  7.1708e-07,
         -5.9117e-07, -6.5466e-07],
        [-7.1954e-07, -2.1699e-07,  7.8509e-07,  ...,  2.4213e-08,
         -4.3220e-07, -1.0445e-06],
        [ 9.1357e-07,  2.9190e-08, -3.0639e-07,  ..., -7.3652e-07,
         -1.3902e-07, -2.1088e-07],
        ...,
        [ 8.5373e-07, -5.1399e-07,  3.0135e-07,  ..., -5.5180e-07,
         -2.1588e-07,  1.4046e-07],
        [-4.0587e-07, -8.3413e-07, -4.6520e-07,  ...,  8.6519e-07,
          4.1054e-09, -2.6876e-07],
        [ 3.4625e-07,  9.4814e-07,  7.9121e-07,  ...,  9.2321e-07,
         -9.3638e-07, -5.3177e-07]], device='cuda:0', requires_grad=True)
tensor([[ 1.7515e-07,  7.7397e-07,  4.7165e-08,  ...,  7.1708e-07,
         -5.9117e-07, -6.5466e-07],
        [-7.1954e-07, -2.1699e-07,  7.8509e-07,  ...,  2.4213e-08,
         -4.3220e-07, -1.0445e-06],
        [ 9.1357e-07,  2.9190e-08, -3.0639e-07,  ..., -7.3652e-07,
         -1.3902e-07, -2.1088e-07],
        ...,
        [ 8.5373e-07, -5.1399e-07,  3.0135e-07,  ..., -5.5180e-07,
         -2.1588e-07,  1.4046e-07],
        [-4.0587e-07, -8.3413e-07, -4.6520e-07,  ...,  8.6519e-07,
          4.1054e-09, -2.6876e-07],
        [ 3.4625e-07,  9.4814e-07,  7.9121e-07,  ...,  9.2321e-07,
         -9.3638e-07, -5.3177e-07]], device='cuda:0', requires_grad=True)
tensor([[ 1.7515e-07,  7.7397e-07,  4.7165e-08,  ...,  7.1708e-07,
         -5.9117e-07, -6.5466e-07],
        [-7.1954e-07, -2.1699e-07,  7.8509e-07,  ...,  2.4213e-08,
         -4.3220e-07, -1.0445e-06],
        [ 9.1357e-07,  2.9190e-08, -3.0639e-07,  ..., -7.3652e-07,
         -1.3902e-07, -2.1088e-07],
        ...,
        [ 8.5373e-07, -5.1399e-07,  3.0135e-07,  ..., -5.5180e-07,
         -2.1588e-07,  1.4046e-07],
        [-4.0587e-07, -8.3413e-07, -4.6520e-07,  ...,  8.6519e-07,
          4.1054e-09, -2.6876e-07],
        [ 3.4625e-07,  9.4814e-07,  7.9121e-07,  ...,  9.2321e-07,
         -9.3638e-07, -5.3177e-07]], device='cuda:0')
^CTraceback (most recent call last):


tensor([[ 7.2716e-28,  8.8610e-28,  1.0148e-27,  ...,  1.1478e-27,
          1.1478e-27,  1.1478e-27],
        [ 1.0513e-27,  1.0818e-27,  1.0870e-27,  ...,  1.2139e-27,
          1.2139e-27,  1.2139e-27],
        [ 9.9771e-29,  1.4755e-28,  1.8723e-28,  ...,  1.7930e-27,
          1.7930e-27,  1.7930e-27],
        ...,
        [-1.4606e-26, -1.4808e-26, -1.4809e-26,  ..., -2.4293e-26,
         -2.4293e-26, -2.4293e-26],
        [-1.6739e-27, -1.6608e-27, -1.6327e-27,  ..., -2.4290e-27,
         -2.4290e-27, -2.4290e-27],
        [-8.0964e-27, -7.6252e-27, -7.1283e-27,  ..., -1.1113e-26,
         -1.1113e-26, -1.1113e-26]], device='cuda:0')

        -1.8532e-22,  2.4559e-21,  6.7070e-22,  1.7228e-21,  2.6194e-22,
        -2.3427e-22, -6.9188e-22,  3.3250e-23, -9.5891e-22, -3.6656e-22,
         9.3920e-22, -7.0497e-22,  5.4092e-22, -2.8474e-22, -7.7411e-22,
        -9.3836e-22, -5.8290e-22, -6.9065e-22, -3.1716e-22, -1.1995e-22,
         1.2584e-21,  3.4729e-22, -2.1514e-22, -5.3639e-22,  1.6323e-22,
        -1.4458e-21,  4.9198e-22, -8.7096e-23, -1.6441e-21,  2.5306e-22,
         3.5845e-22,  1.1495e-24, -1.4717e-22,  3.2067e-22,  2.2459e-23,
        -2.7546e-23, -1.0612e-22, -1.3460e-22,  1.2010e-21,  1.2432e-21,
         4.5692e-23,  3.0889e-22,  5.3851e-22, -5.2433e-22,  8.0125e-23,
         7.5149e-22, -1.5184e-22,  2.4757e-23,  8.0083e-22,  6.7682e-22,
         1.5281e-22,  1.8776e-22, -1.0759e-21,  1.6574e-21,  2.5180e-22,
         1.1197e-21,  3.8076e-22,  2.4082e-21, -2.8519e-22,  5.8048e-22,
         1.4309e-22, -2.2236e-23,  4.4846e-22, -3.7122e-22, -7.6124e-22,
         1.6391e-21,  4.8976e-22,  2.9607e-23, -2.4117e-22,  4.9004e-22,
         1.0584e-21, -1.3572e-21,  2.3040e-22,  3.2173e-21,  1.5889e-21,
        -4.1450e-22,  1.6016e-21,  1.0220e-21, -2.9937e-21, -1.4970e-21,
        -4.7759e-22, -5.2402e-22,  2.7807e-21, -6.5125e-22,  1.3952e-21,
         9.1956e-23, -3.4637e-22,  5.6968e-22,  3.6225e-22,  1.2155e-21,
        -1.1509e-21,  1.3477e-21, -3.2525e-22,  2.4162e-21, -9.5768e-23,
        -1.6781e-22,  3.5055e-21,  3.3507e-23, -6.1053e-22,  3.0337e-21,
         6.3115e-23,  2.4111e-21,  2.9589e-22,  7.2588e-22, -6.6407e-23,
         1.0893e-21, -1.5252e-22,  1.7967e-23,  2.5235e-22,  2.7319e-21,
        -2.8252e-22, -3.0715e-22, -9.8094e-23,  1.2722e-21,  9.5443e-22,
        -2.5582e-22,  1.2299e-22,  1.4549e-22, -2.7803e-22, -4.7038e-22,
         1.5827e-21,  3.2600e-21, -3.0945e-22, -1.2819e-21, -2.6743e-22,
        -1.5098e-21,  4.9049e-22, -2.1229e-22, -3.1285e-21,  8.3891e-22,
         8.3637e-23,  2.1592e-22,  2.5319e-23, -2.1470e-21, -1.3567e-21,
        -1.2644e-21, -8.4327e-22, -1.3279e-22, -2.2050e-21, -1.5104e-21,
         8.7827e-23, -7.9432e-22, -9.8277e-22, -3.2567e-21, -1.9802e-22,
        -2.1584e-22,  3.9241e-22,  1.8961e-22, -2.8887e-22, -5.3761e-23,
         7.1473e-23, -2.8709e-21, -6.3304e-22,  9.1361e-22,  1.9393e-22,
        -5.5374e-24,  3.2375e-22, -2.5471e-22, -3.3290e-21,  2.2475e-22,
        -3.2586e-22,  3.8480e-22, -1.4778e-21, -6.1481e-24, -1.9214e-21,
         6.4381e-22, -1.6254e-21, -8.2043e-23, -5.2603e-22,  3.5397e-21,
         4.2935e-22,  5.9237e-22, -1.0643e-21, -3.5741e-21, -4.4863e-23,
         1.6834e-21,  1.8436e-21,  8.1490e-23, -5.4773e-23, -8.7895e-22,
        -2.5123e-21, -2.5255e-22, -1.3750e-21,  3.4850e-22, -4.5357e-22,
        -4.4982e-22,  2.6599e-22, -1.1182e-21,  6.4584e-22,  3.4799e-22,
        -6.6051e-22, -1.3888e-22, -2.5938e-21,  4.1394e-22, -2.5239e-21,
        -3.0754e-22, -4.9939e-22,  6.3093e-23,  1.6290e-21, -1.2967e-21,
         3.7040e-22,  1.1361e-21,  1.0508e-22,  8.2105e-22, -3.7474e-22,
        -2.0752e-22,  2.3602e-21, -4.4806e-22,  8.6108e-23,  6.5060e-23,
        -5.4779e-22,  4.3639e-22,  1.0389e-21, -1.8521e-21,  1.7317e-22,
         7.1062e-24, -9.4358e-22, -3.6067e-22,  1.9084e-21, -2.0923e-22,
         4.4352e-23, -6.7197e-22,  4.8843e-22, -2.0680e-22, -1.7827e-21,
        -2.4990e-22], device='cuda:0')
tensor([[-1.2536e-27, -1.0941e-27, -1.6555e-27,  ...,  2.0625e-27,
         -1.1061e-26,  4.3110e-27],
        [-1.8871e-28,  1.5386e-28, -4.8080e-28,  ...,  4.6811e-28,
         -1.2145e-27,  6.3209e-28],
        [ 1.7444e-28,  4.1837e-28,  2.6547e-28,  ..., -6.6331e-28,
          2.1384e-27, -1.0594e-27],
        ...,
        [ 8.8100e-29,  3.6325e-29,  1.0593e-28,  ..., -7.8015e-29,
          6.7432e-28, -2.1698e-28],
        [ 6.9942e-28,  5.8453e-28,  9.0956e-28,  ..., -1.1228e-27,
          5.9720e-27, -2.2218e-27],
        [ 1.0364e-28,  8.7474e-29,  1.0569e-28,  ..., -9.6116e-29,
          8.8482e-28, -2.9771e-28]], device='cuda:0')
^CTraceback (most recent call last):


tensor([[-1.0027e-13, -1.1705e-13,  1.1658e-13,  ..., -3.0745e-13,
         -5.1218e-13, -2.7088e-13],
        [-1.3837e-14, -9.5246e-14,  4.4962e-14,  ..., -2.6997e-14,
         -2.4677e-13,  5.5385e-14],
        [-2.0993e-13,  5.3375e-14, -5.5946e-13,  ...,  6.8208e-13,
         -1.7280e-12,  1.0170e-12],
        ...,
        [ 1.0759e-14, -3.0172e-14, -2.6587e-14,  ...,  1.3275e-13,
          3.2448e-14,  4.4600e-14],
        [ 5.2158e-13,  2.8680e-13,  8.9936e-13,  ..., -1.1302e-12,
          4.4805e-12, -1.9833e-12],
        [ 3.3287e-14,  5.5335e-14,  1.9873e-15,  ...,  7.1241e-15,
          3.0081e-13, -6.4299e-14]], device='cuda:0')


init
dense0.w
dense0.b
dense1.w
dense1.b
ddpm_conv0.w
ddpm_conv0.b
resnet000.conv0.w
resnet000.conv0.b
resnet000.conv1.w
resnet000.conv1.b
resnet00
resnet200.groupnorm0.adaptive.style.bias
resnet200.groupnorm1.adaptive.style.weight
resnet200.groupnorm1.adaptive.style.bias
resnet210.conv0.w
resnet210.conv0.b
resnet210.conv1.w
resnet210.conv1.b
resnet210.dense0.w
resnet210.dense0.b
resnet210.groupnorm0.adaptive.style.weight
resnet210.groupnorm0.adaptive.style.bias
resnet210.groupnorm1.adaptive.style.weight
resnet210.groupnorm1.adaptive.style.bias
resnet211.conv0.w
resnet211.conv0.b
resnet211.conv1.w
resnet211.conv1.b
resnet211.dense0.w
resnet211.dense0.b
resnet211.conv2.w
resnet211.conv2.b
resnet211.groupnorm0.adaptive.style.weight
resnet211.groupnorm0.adaptive.style.bias
resnet211.groupnorm1.adaptive.style.weight
resnet211.groupnorm1.adaptive.style.bias
pyramid_downsample210.downsample.conv_2d.up_down_conv.conv0.w
pyramid_downsample210.downsample.conv_2d.up_down_conv.conv0.b
resnet300.conv0.w
resnet300.conv0.b
resnet300.conv1.w
resnet300.conv1.b
resnet300.dense0.w
resnet300.dense0.b
resnet300.groupnorm0.adaptive.style.weight
resnet300.groupnorm0.adaptive.style.bias
resnet300.groupnorm1.adaptive.style.weight
resnet300.groupnorm1.adaptive.style.bias
resnet310.conv0.w
resnet310.conv0.b
resnet310.conv1.w
resnet310.conv1.b
resnet310.dense0.w
resnet310.dense0.b
resnet310.groupnorm0.adaptive.style.weight
resnet310.groupnorm0.adaptive.style.bias
resnet310.groupnorm1.adaptive.style.weight
resnet310.groupnorm1.ad
reverse_resnet200.conv0.w
reverse_resnet200.conv0.b
reverse_resnet200.conv1.w
reverse_resnet200.conv1.b
reverse_resnet200.dense0.w
reverse_resnet200.dense0.b
reverse_resnet200.conv2.w
reverse_resnet200.conv2.b
reverse_resnet200.groupnorm0.adaptive.style.weight
reverse_resnet200.groupnorm0.adaptive.style.bias
reverse_resnet200.groupnorm1.adaptive.style.weight
reverse_resnet200.groupnorm1.adaptive.style.bias
reverse_resnet210.conv0.w
reverse_resnet210.conv0.b
reverse_resnet210.conv1.w
reverse_resnet210.conv1.b
reverse_resnet210.dense0.w
reverse_resnet210.dense0.b
reverse_resnet210.conv2.w
reverse_resnet210.conv2.b
reverse_resnet210.groupnorm0.adaptive.style.weight
reverse_resnet210.groupnorm0.adaptive.style.bias
reverse_resnet210.groupnorm1.adaptive.style.weight
reverse_resnet210.groupnorm1.adaptive.style.bias
reverse_resnet220.conv0.w
reverse_resnet220.conv0.b
reverse_resnet220.conv1.w
reverse_resnet220.conv1.b
reverse_resnet220.dense0.w
reverse_resnet220.dense0.b
reverse_resnet220.conv2.w
reverse_resnet220.conv2.b
reverse_resnet220.groupnorm0.adaptive.style.weight
reverse_resnet220.groupnorm0.adaptive.style.bias
reverse_resnet220.groupnorm1.adaptive.style.weight
reverse_resnet220.groupnorm1.adaptive.style.bias
reverse_resnet221.conv0.w
reverse_resnet221.conv0.b
reverse_resnet221.conv1.w
reverse_resnet221.conv1.b
reverse_resnet221.dense0.w
reverse_resnet221.dense0.b
reverse_resnet221.conv2.w
reverse_resnet221.conv2.b
reverse_resnet221.groupnorm0.adaptive.style.weight
reverse_resnet221.groupnorm0.adaptive.style.bias
reverse_resnet221.groupnor
reverse_resnet000.dense0.w
reverse_resnet000.dense0.b
reverse_resnet000.conv2.w
reverse_resnet000.conv2.b
reverse_resnet000.groupnorm0.adaptive.style.weight
reverse_resnet000.groupnorm0.adaptive.style.bias
reverse_resnet000.groupnorm1.adaptive.style.weight
reverse_resnet000.groupnorm1.adaptive.style.bias
reverse_resnet010.conv0.w
reverse_resnet010.conv0.b
reverse_resnet010.conv1.w
reverse_resnet010.conv1.b
reverse_resnet010.dense0.w
reverse_resnet010.dense0.b
reverse_resnet010.conv2.w
reverse_resnet010.conv2.b
reverse_resnet010.groupnorm0.adaptive.style.weight
reverse_resnet010.groupnorm0.adaptive.style.bias
reverse_resnet010.groupnorm1.adaptive.style.weight
reverse_resnet010.groupnorm1.adaptive.style.bias
reverse_resnet020.conv0.w
reverse_resnet020.conv0.b
reverse_resnet020.conv1.w
reverse_resnet020.conv1.b
reverse_resnet020.dense0.w
reverse_resnet020.dense0.b
reverse_resnet020.conv2.w
reverse_resnet020.conv2.b
reverse_resnet020.groupnorm0.adaptive.style.weight
reverse_resnet020.groupnorm0.adaptive.style.bias
reverse_resnet020.groupnorm1.adaptive.style.weight
reverse_resnet020.groupnorm1.adaptive.style.bias
groupnorm0.w
groupnorm0.b
ddpm_conv1.w
ddpm_conv1.b
first_mapping.weight
first_mapping.bias
list_mapping0.weight
list_mapping0.bias
list_mapping1.weight
list_mapping1.bias
list_mapping2.weight
list_mapping2.bias
list_mapping3.weight
list_mapping3.bias
